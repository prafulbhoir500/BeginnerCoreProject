// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApp.UI.Data;

#nullable disable

namespace WebApp.UI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241228173726_columnchange")]
    partial class columnchange
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApp.UI.Models.AppModule", b =>
                {
                    b.Property<int>("AppModuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppModuleId"));

                    b.Property<string>("ModuleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModuleUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentModuleId")
                        .HasColumnType("int");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("AppModuleId");

                    b.HasIndex("ParentModuleId");

                    b.ToTable("AppModules");
                });

            modelBuilder.Entity("WebApp.UI.Models.AppModuleTemplate", b =>
                {
                    b.Property<int>("AppModuleTemplateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppModuleTemplateId"));

                    b.Property<int>("AppModuleId")
                        .HasColumnType("int");

                    b.Property<bool>("ApproveAccess")
                        .HasColumnType("bit");

                    b.Property<bool>("DeleteAccess")
                        .HasColumnType("bit");

                    b.Property<bool>("EditAccess")
                        .HasColumnType("bit");

                    b.Property<bool>("PrintAccess")
                        .HasColumnType("bit");

                    b.Property<bool>("UploadAccess")
                        .HasColumnType("bit");

                    b.Property<bool>("ViewAccess")
                        .HasColumnType("bit");

                    b.HasKey("AppModuleTemplateId");

                    b.HasIndex("AppModuleId");

                    b.ToTable("AppModuleTemplates");
                });

            modelBuilder.Entity("WebApp.UI.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("WebApp.UI.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("WebApp.UI.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("WebApp.UI.Models.RoleDetails", b =>
                {
                    b.Property<int>("RoleDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleDetailId"));

                    b.Property<int>("AppModuleId")
                        .HasColumnType("int");

                    b.Property<bool>("ApprovedAccess")
                        .HasColumnType("bit");

                    b.Property<bool>("DeleteAccess")
                        .HasColumnType("bit");

                    b.Property<bool>("EditAccess")
                        .HasColumnType("bit");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<bool>("ViewAccess")
                        .HasColumnType("bit");

                    b.HasKey("RoleDetailId");

                    b.HasIndex("AppModuleId");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleDetails");
                });

            modelBuilder.Entity("WebApp.UI.Models.UserInfo", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsOnline")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("UserInfos");
                });

            modelBuilder.Entity("WebApp.UI.Models.UserRole", b =>
                {
                    b.Property<int>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserRoleId"));

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("UserInfoUserId")
                        .HasColumnType("int");

                    b.HasKey("UserRoleId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserInfoUserId");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("WebApp.UI.Models.AppModule", b =>
                {
                    b.HasOne("WebApp.UI.Models.AppModule", "ParentModule")
                        .WithMany("ChildModules")
                        .HasForeignKey("ParentModuleId");

                    b.Navigation("ParentModule");
                });

            modelBuilder.Entity("WebApp.UI.Models.AppModuleTemplate", b =>
                {
                    b.HasOne("WebApp.UI.Models.AppModule", "AppModule")
                        .WithMany("AppModuleTemplates")
                        .HasForeignKey("AppModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppModule");
                });

            modelBuilder.Entity("WebApp.UI.Models.Product", b =>
                {
                    b.HasOne("WebApp.UI.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("WebApp.UI.Models.RoleDetails", b =>
                {
                    b.HasOne("WebApp.UI.Models.AppModule", "AppModule")
                        .WithMany("RoleDetails")
                        .HasForeignKey("AppModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApp.UI.Models.Role", "Role")
                        .WithMany("RoleDetails")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppModule");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("WebApp.UI.Models.UserRole", b =>
                {
                    b.HasOne("WebApp.UI.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApp.UI.Models.UserInfo", "UserInfo")
                        .WithMany()
                        .HasForeignKey("UserInfoUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("UserInfo");
                });

            modelBuilder.Entity("WebApp.UI.Models.AppModule", b =>
                {
                    b.Navigation("AppModuleTemplates");

                    b.Navigation("ChildModules");

                    b.Navigation("RoleDetails");
                });

            modelBuilder.Entity("WebApp.UI.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("WebApp.UI.Models.Role", b =>
                {
                    b.Navigation("RoleDetails");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
